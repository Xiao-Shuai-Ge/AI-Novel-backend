// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4

package handler

import (
	"net/http"

	chapter "Ai-Novel/application/novel/interfaces/api/internal/handler/chapter"
	character "Ai-Novel/application/novel/interfaces/api/internal/handler/character"
	novel "Ai-Novel/application/novel/interfaces/api/internal/handler/novel"
	"Ai-Novel/application/novel/interfaces/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.LimiterSecond10},
			[]rest.Route{
				{
					// 获取篇章(游客)
					Method:  http.MethodGet,
					Path:    "/get-chapter-guest",
					Handler: chapter.GetChapterGuestHandler(serverCtx),
				},
				{
					// 获取小说篇章列表(游客)
					Method:  http.MethodGet,
					Path:    "/get-chapter-list-guest",
					Handler: chapter.GetChapterListGusetHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1/novel"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.LimiterSecond10},
			[]rest.Route{
				{
					// 获取篇章
					Method:  http.MethodGet,
					Path:    "/get-chapter",
					Handler: chapter.GetChapterHandler(serverCtx),
				},
				{
					// 获取小说篇章列表
					Method:  http.MethodGet,
					Path:    "/get-chapter-list",
					Handler: chapter.GetChapterListHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/v1/novel"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.LimiterMinute10},
			[]rest.Route{
				{
					// 添加篇章
					Method:  http.MethodPost,
					Path:    "/create-chapter",
					Handler: chapter.CreateChapterHandler(serverCtx),
				},
				{
					// 删除篇章
					Method:  http.MethodPost,
					Path:    "/delete-chapter",
					Handler: chapter.DeleteChapterHandler(serverCtx),
				},
				{
					// 修改篇章
					Method:  http.MethodPost,
					Path:    "/update-chapter",
					Handler: chapter.UpdateChapterHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/v1/novel"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.LimiterSecond10},
			[]rest.Route{
				{
					// 获取小说角色信息(游客)
					Method:  http.MethodGet,
					Path:    "/get-character-guest",
					Handler: character.GetCharacterGuestHandler(serverCtx),
				},
				{
					// 获取小说角色列表(游客)
					Method:  http.MethodGet,
					Path:    "/get-character-list-guest",
					Handler: character.GetCharacterListGuestHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1/novel"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.LimiterSecond10},
			[]rest.Route{
				{
					// 获取小说角色信息
					Method:  http.MethodGet,
					Path:    "/get-character",
					Handler: character.GetCharacterHandler(serverCtx),
				},
				{
					// 获取小说角色列表
					Method:  http.MethodGet,
					Path:    "/get-character-list",
					Handler: character.GetCharacterListHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/v1/novel"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.LimiterMinute10},
			[]rest.Route{
				{
					// 添加角色
					Method:  http.MethodPost,
					Path:    "/create-character",
					Handler: character.CreateCharacterHandler(serverCtx),
				},
				{
					// 删除角色
					Method:  http.MethodPost,
					Path:    "/delete-character",
					Handler: character.DeleteCharacterHandler(serverCtx),
				},
				{
					// 修改角色
					Method:  http.MethodPost,
					Path:    "/update-character",
					Handler: character.UpdateCharacterHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/v1/novel"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.LimiterSecond10},
			[]rest.Route{
				{
					// 获取小说信息(游客)
					Method:  http.MethodGet,
					Path:    "/get-novel-guest",
					Handler: novel.GetNovelGuestHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1/novel"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.LimiterSecond10},
			[]rest.Route{
				{
					// 获取小说信息
					Method:  http.MethodGet,
					Path:    "/get-novel",
					Handler: novel.GetNovelHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/v1/novel"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.LimiterMinute10},
			[]rest.Route{
				{
					// 增加小说
					Method:  http.MethodPost,
					Path:    "/create-novel",
					Handler: novel.CreateNovelHandler(serverCtx),
				},
				{
					// 删除小说
					Method:  http.MethodPost,
					Path:    "/delete-novel",
					Handler: novel.DeleteNovelHandler(serverCtx),
				},
				{
					// 修改小说
					Method:  http.MethodPost,
					Path:    "/update-novel",
					Handler: novel.UpdateNovelHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/v1/novel"),
	)
}
