syntax = "v1"

@server (
	group:      base
	middleware: CorsMiddleware,LimiterSecond
	prefix:     /v1/base
)
service user-api {
	@doc "测试接口(ping)"
	@handler Ping
	get /ping (PingReq) returns (PingResp)
}

@server (
	group:      base
	middleware: CorsMiddleware,LimiterSecond
	prefix:     /v1/base
	jwt:        Auth
)
service user-api {
	@doc "JWT测试接口(ping)"
	@handler PingJWT
	get /ping-jwt (PingJWTReq) returns (PingJWTResp)
}

// 频率限制 1 次 / 分钟
@server (
	group:      login
	middleware: CorsMiddleware,LimiterMinute
	prefix:     /v1/login
)
service user-api {
	@doc "发送注册邮箱验证码"
	@handler SendCaptcha
	post /captcha (CaptchaReq) returns (CaptchaResp)

	@doc "注册"
	@handler Register
	post /register (RegisterReq) returns (RegisterResp)
}

// 频率限制 10 次 / 分钟
@server (
	group:      login
	middleware: CorsMiddleware,LimiterMinute10
	prefix:     /v1/login
)
service user-api {
	@doc "登录"
	@handler Login
	post /login (LoginReq) returns (LoginResp)

	@doc "刷新 token"
	@handler RefreshToken
	post /refresh-token (RefreshTokenReq) returns (RefreshTokenResp)
}

@server (
	group:      user
	middleware: CorsMiddleware,LimiterSecond10
	prefix:     /v1/user
)
service user-api {
	@doc "获取用户信息"
	@handler GetUser
	get /get-user (GetUserReq) returns (GetUserResp)
}

@server (
	group:      user
	middleware: CorsMiddleware,LimiterSecond10
	prefix:     /v1/user
	jwt:        Auth
)
service user-api {
	@doc "获取个人信息"
	@handler GetUserSelf
	get /get-user-self (GetUserSelfReq) returns (GetUserSelfResp)
}

@server (
	group:      user
	middleware: CorsMiddleware,LimiterSecond
	prefix:     /v1/user
	jwt:        Auth
)
service user-api {
	@doc "修改用户信息"
	@handler ModifyUser
	post /modify-user (ModifyUserReq) returns (ModifyUserResp)
}

type (
	PingJWTReq  {}
	PingJWTResp {
		Msg string `json:"msg"` // 响应信息
	}
	PingReq  {}
	PingResp {
		Msg string `json:"msg"` // 响应信息
	}
	CaptchaReq {
		Email string `json:"email"` // 接受验证码的邮箱
	}
	CaptchaResp {
		Msg string `json:"msg"` // 响应信息
	}
	RegisterReq {
		Email    string `json:"email"` // 注册邮箱
		Password string `json:"password"` // 注册密码
		Captcha  string `json:"captcha"` // 验证码
	}
	RegisterResp {
		Atoken string `json:"atoken"` // 登录 token
	}
	LoginReq {
		Email      string `json:"email"` // 登录邮箱
		Password   string `json:"password"` // 登录密码
		IsRemember bool   `json:"is_remember"` // 是否记住登录状态
	}
	LoginResp {
		Atoken string `json:"atoken"` // 登录 token
		Rtoken string `json:"rtoken"` // 刷新 token
	}
	RefreshTokenReq {
		Rtoken string `json:"rtoken"` // 刷新 token
	}
	RefreshTokenResp {
		Atoken string `json:"atoken"` // 登录 token
	}
	GetUserReq {
		Id string `form:"id"` // 用户 id
	}
	GetUserResp {
		Id       int64  `json:"id,string"` // 用户 id
		Username string `json:"username"` // 用户昵称
		Avatar   string `json:"avatar"` // 用户头像
	}
	GetUserSelfReq  {}
	GetUserSelfResp {
		Id       int64  `json:"id,string"` // 用户 id
		Username string `json:"username"` // 用户昵称
		Avatar   string `json:"avatar"` // 用户头像
	}
	ModifyUserReq {
		Id       string `json:"id"` // 用户 id
		Username string `json:"username"` // 用户昵称
		Avatar   string `json:"avatar"` // 用户头像
	}
	ModifyUserResp {
		Msg string `json:"msg"` // 响应信息
	}
)

